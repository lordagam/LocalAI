name: Build and Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: write

concurrency:
  group: ci-releases-${{ github.head_ref || github.ref }}-${{ github.repository }}
  cancel-in-progress: true

jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Clone
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16'
          cache: 'go'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential ffmpeg protobuf-compiler ccache
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest

      - name: Build
        id: build
        run: |
          export PATH=$PATH:$GOPATH/bin
          GO_TAGS=p2p make dist

      - name: Upload Linux artifact
        uses: actions/upload-artifact@v2
        with:
          name: LocalAI-Linux
          path: release/

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            release/*

  build-stablediffusion:
    runs-on: ubuntu-latest
    steps:
      - name: Clone
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16'
          cache: 'go'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends libopencv-dev protobuf-compiler ccache
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest

      - name: Build stablediffusion
        run: |
          export PATH=$PATH:$GOPATH/bin
          GO_TAGS=stablediffusion make dist
          mkdir -p release && cp backend-assets/grpc/stablediffusion release

      - name: Upload Stablediffusion artifact
        uses: actions/upload-artifact@v2
        with:
          name: LocalAI-Stablediffusion
          path: release/

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            release/*

  build-macOS-arm64:
    runs-on: macos-latest
    steps:
      - name: Clone
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16'
          cache: 'go'

      - name: Install dependencies
        run: |
          brew install protobuf grpc
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest

      - name: Build
        id: build
        run: |
          export C_INCLUDE_PATH=/usr/local/include
          export CPLUS_INCLUDE_PATH=/usr/local/include
          export PATH=$PATH:$GOPATH/bin
          GO_TAGS=p2p make dist

      - name: Upload macOS-arm64 artifact
        uses: actions/upload-artifact@v2
        with:
          name: LocalAI-MacOS-arm64
          path: release/

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            release/*

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: true

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: '1.16'
          cache: 'go'

      - name: Set up MinGW
        run: |
          choco install mingw -y
          refreshenv
        shell: pwsh

      - name: Set up dependencies
        run: |
          go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@latest
          go install google.golang.org/protobuf/cmd/protoc-gen-go@latest
        shell: bash

      - name: Build for Windows
        run: |
          go build -o LocalAI.exe
        shell: pwsh

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: LocalAI-Windows
          path: LocalAI.exe

      - name: Release
        uses: softprops/action-gh-release@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            LocalAI.exe
